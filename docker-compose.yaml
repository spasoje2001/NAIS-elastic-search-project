version: '3.9'

services:

  eureka-server:
    build: ./eureka-service
    image: eureka-server:latest
    container_name: eureka-server
    ports:
      - 8761:8761

  gateway-api:
    build: ./api-gateway
    image: gateway-api:latest
    container_name: gateway-api
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - ELASTICSEARCH_SERVICE_HOST=elasticsearch-service
      - ELASTICSEARCH_SERVICE_PORT=8080
      - IIS_MUSEUM_HOST=iis-museum
      - IIS_MUSEUM_PORT=8080
    depends_on:
      - eureka-server
    ports:
      - 9000:9000

  elasticsearch-service:
    build: ./elastic-search-service
    image: elasticsearch-service:latest
    container_name: elasticsearch-service
    restart: always
    ports:
      - 8080:8080
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - ELASTICSEARCH_HOST=elasticsearch
      - ELASTICSEARCH_PORT=9200
      - KAFKA_HOST=kafka1
      - KAFKA_PORT=9091
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka1:19091
      - NATS_HOST=nats
      - NATS_PORT=4222
    # command: [ "--spring.cloud.stream.kafka.binder.brokers=kafka1:19091", "--spring.cloud.stream.bindings.output.destination=elastic-event", "--spring.cloud.stream.kafka.bindings.output.producer.configuration.topic=elastic-event", "--spring.cloud.stream.kafka.bindings.output.producer.configuration.partitions=1" ]
    depends_on:
      - elasticsearch

  elasticsearch:
    image: elasticsearch:8.14.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  kibana:
    image: kibana:8.14.1
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: always

  iis-museum:
    build: ./iis-museum
    image: iis-museum:latest
    container_name: iis-museum
    restart: always
    ports:
      - 8081:8081
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-server:8761/eureka
      - POSTGRES_HOST=iis-database
      - POSTGRES_PORT=5432
      - KAFKA_HOST=kafka2
      - KAFKA_PORT=9092
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka2:19092
      - NATS_HOST=nats
      - NATS_PORT=4222
    # command: [ "--spring.cloud.stream.kafka.binder.brokers=kafka2:19092", "--spring.cloud.stream.bindings.output.destination=event-created", "--spring.cloud.stream.kafka.bindings.output.producer.configuration.topic=event-created", "--spring.cloud.stream.kafka.bindings.output.producer.configuration.partitions=1" ]
    depends_on:
      - iis-database

  iis-database:
    image: postgres:latest
    container_name: iis-database
    ports:
      - 5433:5432
    environment:
      - POSTGRES_DB=museum-backend
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=super
    volumes:
      - museum-data:/var/lib/postgresql/data

  zoo:
    image: zookeeper:3.4.9
    hostname: zoo
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    volumes:
      - ./zk-single-kafka-multiple/zoo/data:/data
      - ./zk-single-kafka-multiple/zoo/datalog:/datalog
  
  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    container_name: kafka1
    hostname: kafka1
    ports:
      - "9091:9091"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    volumes:
      - ./zk-single-kafka-multiple/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo
  
  kafka2:
    image: confluentinc/cp-kafka:5.3.0
    container_name: kafka2
    hostname: kafka2
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
    volumes:
      - ./zk-single-kafka-multiple/kafka2/data:/var/lib/kafka/data
    depends_on:
      - zoo

  # manager:
  #   image: sheepkiller/kafka-manager
  #   ports:
  #     - 9001:9000
  #   environment:
  #     - ZK_HOSTS=zoo:2181
  #   depends_on:
  #     - zoo

  nats:
    image: nats
    container_name: nats
    ports:
      - "4222:4222"
    

volumes:
  elasticsearch-data:
    driver: local
  museum-data:
    driver: local
    name: museum-data